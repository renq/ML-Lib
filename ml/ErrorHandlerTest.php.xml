<?xml version="1.0" encoding="UTF-8"?>
<testFile fullPath="/home/renq/Projects/www/ml_lib/tests//e2e/ErrorHandlerTest.php" shortenedPath="e2e/ErrorHandlerTest.php" generated="1298673637" phpunit="3.4.13">
  <line lineNumber="1">
    <body>&lt;?php</body>
  </line>
  <line lineNumber="2">
    <body></body>
  </line>
  <line lineNumber="3">
    <body>use ml\e2e\ErrorHandler;</body>
  </line>
  <line lineNumber="4">
    <body></body>
  </line>
  <line lineNumber="5">
    <body>require_once __DIR__ . '/../../ml/ml.php';</body>
  </line>
  <line lineNumber="6">
    <body></body>
  </line>
  <line lineNumber="7">
    <body></body>
  </line>
  <line lineNumber="8">
    <body>class ErrorHandlerTest extends PHPUnit_Framework_TestCase {</body>
  </line>
  <line lineNumber="9">
    <body>	</body>
  </line>
  <line lineNumber="10">
    <body>	</body>
  </line>
  <line lineNumber="11">
    <body>    public function testEnabledIfInstanceIsRunOrStop() {</body>
  </line>
  <line lineNumber="12">
    <body>    	$handler = ml\e2e\ErrorHandler::getInstance();</body>
  </line>
  <line lineNumber="13">
    <body>    	$this-&gt;assertFalse($handler-&gt;isEnabled());</body>
  </line>
  <line lineNumber="14">
    <body>    	$handler = ml\e2e\ErrorHandler::run();</body>
  </line>
  <line lineNumber="15">
    <body>    	$this-&gt;assertTrue($handler-&gt;isEnabled());</body>
  </line>
  <line lineNumber="16">
    <body>    	$handler = ml\e2e\ErrorHandler::stop();</body>
  </line>
  <line lineNumber="17">
    <body>    	$this-&gt;assertFalse($handler-&gt;isEnabled());</body>
  </line>
  <line lineNumber="18">
    <body>    }</body>
  </line>
  <line lineNumber="19">
    <body>    </body>
  </line>
  <line lineNumber="20">
    <body>    </body>
  </line>
  <line lineNumber="21">
    <body>    public function testThrowNoticeException() {</body>
  </line>
  <line lineNumber="22">
    <body>    	error_reporting(E_ALL);</body>
  </line>
  <line lineNumber="23">
    <body>    	ml\e2e\ErrorHandler::run();</body>
  </line>
  <line lineNumber="24">
    <body>    	$this-&gt;setExpectedException('ml\e2e\NoticeException');</body>
  </line>
  <line lineNumber="25">
    <body>    	$array = array('kitty', 'cat');</body>
  </line>
  <line lineNumber="26">
    <body>    	$array[12];</body>
  </line>
  <line lineNumber="27">
    <body>    }</body>
  </line>
  <line lineNumber="28">
    <body>    </body>
  </line>
  <line lineNumber="29">
    <body>    </body>
  </line>
  <line lineNumber="30">
    <body>    public function testThrowUserNoticeException() {</body>
  </line>
  <line lineNumber="31">
    <body>    	error_reporting(E_ALL);</body>
  </line>
  <line lineNumber="32">
    <body>    	ml\e2e\ErrorHandler::stop(); // PHPUnit has own error_handler. This force ours. :)</body>
  </line>
  <line lineNumber="33">
    <body>    	ml\e2e\ErrorHandler::run();</body>
  </line>
  <line lineNumber="34">
    <body>    	$this-&gt;setExpectedException('ml\e2e\UserNoticeException');</body>
  </line>
  <line lineNumber="35">
    <body>    	trigger_error("Custom user notice", E_USER_NOTICE);</body>
  </line>
  <line lineNumber="36">
    <body>    }</body>
  </line>
  <line lineNumber="37">
    <body>    </body>
  </line>
  <line lineNumber="38">
    <body>    </body>
  </line>
  <line lineNumber="39">
    <body>    public function testThrowWarningException() {</body>
  </line>
  <line lineNumber="40">
    <body>    	error_reporting(E_ALL);</body>
  </line>
  <line lineNumber="41">
    <body>    	ml\e2e\ErrorHandler::run();</body>
  </line>
  <line lineNumber="42">
    <body>    	$this-&gt;setExpectedException('ml\e2e\WarningException');</body>
  </line>
  <line lineNumber="43">
    <body>    	1/0;</body>
  </line>
  <line lineNumber="44">
    <body>    }</body>
  </line>
  <line lineNumber="45">
    <body>    </body>
  </line>
  <line lineNumber="46">
    <body>    </body>
  </line>
  <line lineNumber="47">
    <body>    public function testThrowUserWarningException() {</body>
  </line>
  <line lineNumber="48">
    <body>    	error_reporting(E_ALL);</body>
  </line>
  <line lineNumber="49">
    <body>    	ml\e2e\ErrorHandler::run();</body>
  </line>
  <line lineNumber="50">
    <body>    	$this-&gt;setExpectedException('ml\e2e\UserWarningException');</body>
  </line>
  <line lineNumber="51">
    <body>    	trigger_error("Custom user warning", E_USER_WARNING);</body>
  </line>
  <line lineNumber="52">
    <body>    }</body>
  </line>
  <line lineNumber="53">
    <body>    </body>
  </line>
  <line lineNumber="54">
    <body>    </body>
  </line>
  <line lineNumber="55">
    <body>    public function testNotThrowException() {</body>
  </line>
  <line lineNumber="56">
    <body>    	error_reporting(0);</body>
  </line>
  <line lineNumber="57">
    <body>    	$array = array(1);</body>
  </line>
  <line lineNumber="58">
    <body>    	$array[666];</body>
  </line>
  <line lineNumber="59">
    <body>    	1/0;</body>
  </line>
  <line lineNumber="60">
    <body>    	$this-&gt;assertTrue(true);</body>
  </line>
  <line lineNumber="61">
    <body>    }</body>
  </line>
  <line lineNumber="62">
    <body></body>
  </line>
  <line lineNumber="63">
    <body>    </body>
  </line>
  <line lineNumber="64">
    <body>    public function testThrowWarningAndNotNoticeException() {</body>
  </line>
  <line lineNumber="65">
    <body>    	$this-&gt;setExpectedException('ml\e2e\WarningException');</body>
  </line>
  <line lineNumber="66">
    <body>    	error_reporting(E_WARNING);</body>
  </line>
  <line lineNumber="67">
    <body>    	$array = array(1);</body>
  </line>
  <line lineNumber="68">
    <body>    	$array[666];</body>
  </line>
  <line lineNumber="69">
    <body>    	1/0;</body>
  </line>
  <line lineNumber="70">
    <body>    }</body>
  </line>
  <line lineNumber="71">
    <body>    </body>
  </line>
  <line lineNumber="72">
    <body>	public function testClone() {</body>
  </line>
  <line lineNumber="73">
    <body>		error_reporting(-1);</body>
  </line>
  <line lineNumber="74">
    <body>    	$this-&gt;setExpectedException('BadMethodCallException');</body>
  </line>
  <line lineNumber="75">
    <body>    	$instance = ErrorHandler::getInstance();</body>
  </line>
  <line lineNumber="76">
    <body>    	$clone = clone $instance;</body>
  </line>
  <line lineNumber="77">
    <body>    }</body>
  </line>
  <line lineNumber="78">
    <body>    </body>
  </line>
  <line lineNumber="79">
    <body>    </body>
  </line>
  <line lineNumber="80">
    <body>	public function testRecoverableErrorException() {</body>
  </line>
  <line lineNumber="81">
    <body>		$this-&gt;setExpectedException('ml\e2e\RecoverableErrorException');</body>
  </line>
  <line lineNumber="82">
    <body>		$function = function(ArrayObject $a) {};</body>
  </line>
  <line lineNumber="83">
    <body>    	$function(new stdClass());</body>
  </line>
  <line lineNumber="84">
    <body>    }</body>
  </line>
  <line lineNumber="85">
    <body>    </body>
  </line>
  <line lineNumber="86">
    <body>    </body>
  </line>
  <line lineNumber="87">
    <body>	public function testUnknownException() {</body>
  </line>
  <line lineNumber="88">
    <body>		error_reporting(-1);</body>
  </line>
  <line lineNumber="89">
    <body>    	$this-&gt;setExpectedException('ml\e2e\UnknownException');</body>
  </line>
  <line lineNumber="90">
    <body>    	ErrorHandler::handler(666, "Fake error", __FILE__, __LINE__, '');</body>
  </line>
  <line lineNumber="91">
    <body>    }</body>
  </line>
  <line lineNumber="92">
    <body>    </body>
  </line>
  <line lineNumber="93">
    <body>    </body>
  </line>
  <line lineNumber="94">
    <body>    public function testThrowDeprecatedException() {</body>
  </line>
  <line lineNumber="95">
    <body>    	error_reporting(-1);</body>
  </line>
  <line lineNumber="96">
    <body>    	ml\e2e\ErrorHandler::run();</body>
  </line>
  <line lineNumber="97">
    <body>    	$this-&gt;setExpectedException('ml\e2e\DeprecatedException');</body>
  </line>
  <line lineNumber="98">
    <body>    	eregi("^[a-z0-9_-]+[a-z0-9_.-]*@[a-z0-9_-]+[a-z0-9_.-]*\.[a-z]{2,5}$", 'example@example.com');</body>
  </line>
  <line lineNumber="99">
    <body>    }</body>
  </line>
  <line lineNumber="100">
    <body>   </body>
  </line>
  <line lineNumber="101">
    <body> </body>
  </line>
  <line lineNumber="102">
    <body>    /**</body>
  </line>
  <line lineNumber="103">
    <body>     * Strict errors are triggered in compile time, so we just included class</body>
  </line>
  <line lineNumber="104">
    <body>     * with strict errors later than ErrorHandler...</body>
  </line>
  <line lineNumber="105">
    <body>     */</body>
  </line>
  <line lineNumber="106">
    <body>    public function testThrowStrictException() {</body>
  </line>
  <line lineNumber="107">
    <body>    	error_reporting(-1);</body>
  </line>
  <line lineNumber="108">
    <body>    	ml\e2e\ErrorHandler::run();</body>
  </line>
  <line lineNumber="109">
    <body>    	$this-&gt;setExpectedException('ml\e2e\StrictException');</body>
  </line>
  <line lineNumber="110">
    <body>    	include(__DIR__ . '/strict.php');</body>
  </line>
  <line lineNumber="111">
    <body>    }</body>
  </line>
  <line lineNumber="112">
    <body></body>
  </line>
  <line lineNumber="113">
    <body></body>
  </line>
  <line lineNumber="114">
    <body>}</body>
  </line>
</testFile>
